# -*- coding: utf-8 -*-
"""OTP Verification-Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Pc8n1u1goNH5gJvSny1tdMpYJVvVpWlk
"""

import smtplib
from email.message import EmailMessage
import random
import re
import time
from getpass import getpass

# Function to generate a 6-digit OTP
def generate_otp():
    return str(random.randint(100000, 999999))

# Validate email format
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return re.match(pattern, email)

# Validate App Password (should be 16 characters, alphanumeric only)
def is_valid_password(password):
    return len(password) == 16 and password.isalnum()

# Send OTP via Gmail SMTP
def send_otp_real_email(otp, recipient_email, sender_email, sender_password):
    try:
        msg = EmailMessage()
        msg.set_content(f'Your OTP is: {otp}')
        msg['Subject'] = 'Your OTP Verification Code'
        msg['From'] = sender_email
        msg['To'] = recipient_email

        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(sender_email, sender_password)
        server.send_message(msg)
        server.quit()
        print("OTP sent successfully.")
        return True
    except Exception as e:
        print("Failed to send OTP. Please check your sender email or App Password.")
        print(f"Error: {e}")
        return False

# Prompt user to enter OTP
def get_user_otp():
    return input("Enter the OTP you received in your email: ").strip()

# Verify OTP with retry logic
def verify_otp(original_otp, max_attempts=3):
    attempts = 0
    while attempts < max_attempts:
        user_otp = get_user_otp()
        if user_otp == original_otp:
            print("Access Granted. OTP Verified Successfully.")
            return True
        else:
            attempts += 1
            print(f"Incorrect OTP. Attempts left: {max_attempts - attempts}")
    print("Access Denied. You have exceeded the number of attempts.")
    return False

# Main driver function
def main():
    print("Welcome to the OTP Verification System")

    # Get and validate recipient email
    while True:
        recipient_email = input("Enter the recipient's email address: ").strip()
        if is_valid_email(recipient_email):
            break
        print("Invalid email format. Please enter a valid email (e.g., yourname@example.com).")

    # Get sender email
    sender_email = input("Enter your Gmail address (sender): ").strip()

    # Get and validate App Password securely
    while True:
        sender_password = getpass("Enter your 16-character App Password: ").strip()
        if is_valid_password(sender_password):
            break
        print("Invalid App Password. Must be exactly 16 alphanumeric characters.")

    # Generate OTP
    otp = generate_otp()

    # Send OTP
    if not send_otp_real_email(otp, recipient_email, sender_email, sender_password):
        print("Unable to proceed without sending OTP. Exiting...")
        return

    # Verify OTP
    verify_otp(otp)

# Run the program
if __name__ == "__main__":
    main()